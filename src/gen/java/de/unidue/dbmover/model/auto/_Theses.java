package de.unidue.dbmover.model.auto;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDateTime;

import org.apache.cayenne.BaseDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Theses was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Theses extends BaseDataObject {

    private static final long serialVersionUID = 1L; 


    public static final Property<Long> JOURNAL_ID = Property.create("journalId", Long.class);
    public static final Property<Short> STATUS = Property.create("status", Short.class);
    public static final Property<Short> DEGREE = Property.create("degree", Short.class);
    public static final Property<String> DEGREE_NAME = Property.create("degreeName", String.class);
    public static final Property<String> DEPARTMENT = Property.create("department", String.class);
    public static final Property<String> UNIVERSITY = Property.create("university", String.class);
    public static final Property<LocalDateTime> DATE_APPROVED = Property.create("dateApproved", LocalDateTime.class);
    public static final Property<String> TITLE = Property.create("title", String.class);
    public static final Property<String> URL = Property.create("url", String.class);
    public static final Property<String> ABSTRACT = Property.create("abstract", String.class);
    public static final Property<String> COMMENT = Property.create("comment", String.class);
    public static final Property<String> STUDENT_FIRST_NAME = Property.create("studentFirstName", String.class);
    public static final Property<String> STUDENT_MIDDLE_NAME = Property.create("studentMiddleName", String.class);
    public static final Property<String> STUDENT_LAST_NAME = Property.create("studentLastName", String.class);
    public static final Property<String> STUDENT_EMAIL = Property.create("studentEmail", String.class);
    public static final Property<Short> STUDENT_EMAIL_PUBLISH = Property.create("studentEmailPublish", Short.class);
    public static final Property<String> STUDENT_BIO = Property.create("studentBio", String.class);
    public static final Property<String> SUPERVISOR_FIRST_NAME = Property.create("supervisorFirstName", String.class);
    public static final Property<String> SUPERVISOR_MIDDLE_NAME = Property.create("supervisorMiddleName", String.class);
    public static final Property<String> SUPERVISOR_LAST_NAME = Property.create("supervisorLastName", String.class);
    public static final Property<String> SUPERVISOR_EMAIL = Property.create("supervisorEmail", String.class);
    public static final Property<String> DISCIPLINE = Property.create("discipline", String.class);
    public static final Property<String> SUBJECT_CLASS = Property.create("subjectClass", String.class);
    public static final Property<String> SUBJECT = Property.create("subject", String.class);
    public static final Property<String> COVERAGE_GEO = Property.create("coverageGeo", String.class);
    public static final Property<String> COVERAGE_CHRON = Property.create("coverageChron", String.class);
    public static final Property<String> COVERAGE_SAMPLE = Property.create("coverageSample", String.class);
    public static final Property<String> METHOD = Property.create("method", String.class);
    public static final Property<String> LANGUAGE = Property.create("language", String.class);
    public static final Property<LocalDateTime> DATE_SUBMITTED = Property.create("dateSubmitted", LocalDateTime.class);
    public static final Property<Integer> THESIS_ID = Property.create("thesisId", Integer.class);

    protected long journalId;
    protected short status;
    protected short degree;
    protected String degreeName;
    protected String department;
    protected String university;
    protected LocalDateTime dateApproved;
    protected String title;
    protected String url;
    protected String _abstract;
    protected String comment;
    protected String studentFirstName;
    protected String studentMiddleName;
    protected String studentLastName;
    protected String studentEmail;
    protected Short studentEmailPublish;
    protected String studentBio;
    protected String supervisorFirstName;
    protected String supervisorMiddleName;
    protected String supervisorLastName;
    protected String supervisorEmail;
    protected String discipline;
    protected String subjectClass;
    protected String subject;
    protected String coverageGeo;
    protected String coverageChron;
    protected String coverageSample;
    protected String method;
    protected String language;
    protected LocalDateTime dateSubmitted;
    protected Integer thesisId;


    public void setJournalId(long journalId) {
        beforePropertyWrite("journalId", this.journalId, journalId);
        this.journalId = journalId;
    }

    public long getJournalId() {
        beforePropertyRead("journalId");
        return this.journalId;
    }

    public void setStatus(short status) {
        beforePropertyWrite("status", this.status, status);
        this.status = status;
    }

    public short getStatus() {
        beforePropertyRead("status");
        return this.status;
    }

    public void setDegree(short degree) {
        beforePropertyWrite("degree", this.degree, degree);
        this.degree = degree;
    }

    public short getDegree() {
        beforePropertyRead("degree");
        return this.degree;
    }

    public void setDegreeName(String degreeName) {
        beforePropertyWrite("degreeName", this.degreeName, degreeName);
        this.degreeName = degreeName;
    }

    public String getDegreeName() {
        beforePropertyRead("degreeName");
        return this.degreeName;
    }

    public void setDepartment(String department) {
        beforePropertyWrite("department", this.department, department);
        this.department = department;
    }

    public String getDepartment() {
        beforePropertyRead("department");
        return this.department;
    }

    public void setUniversity(String university) {
        beforePropertyWrite("university", this.university, university);
        this.university = university;
    }

    public String getUniversity() {
        beforePropertyRead("university");
        return this.university;
    }

    public void setDateApproved(LocalDateTime dateApproved) {
        beforePropertyWrite("dateApproved", this.dateApproved, dateApproved);
        this.dateApproved = dateApproved;
    }

    public LocalDateTime getDateApproved() {
        beforePropertyRead("dateApproved");
        return this.dateApproved;
    }

    public void setTitle(String title) {
        beforePropertyWrite("title", this.title, title);
        this.title = title;
    }

    public String getTitle() {
        beforePropertyRead("title");
        return this.title;
    }

    public void setUrl(String url) {
        beforePropertyWrite("url", this.url, url);
        this.url = url;
    }

    public String getUrl() {
        beforePropertyRead("url");
        return this.url;
    }

    public void setAbstract(String _abstract) {
        beforePropertyWrite("abstract", this._abstract, _abstract);
        this._abstract = _abstract;
    }

    public String getAbstract() {
        beforePropertyRead("abstract");
        return this._abstract;
    }

    public void setComment(String comment) {
        beforePropertyWrite("comment", this.comment, comment);
        this.comment = comment;
    }

    public String getComment() {
        beforePropertyRead("comment");
        return this.comment;
    }

    public void setStudentFirstName(String studentFirstName) {
        beforePropertyWrite("studentFirstName", this.studentFirstName, studentFirstName);
        this.studentFirstName = studentFirstName;
    }

    public String getStudentFirstName() {
        beforePropertyRead("studentFirstName");
        return this.studentFirstName;
    }

    public void setStudentMiddleName(String studentMiddleName) {
        beforePropertyWrite("studentMiddleName", this.studentMiddleName, studentMiddleName);
        this.studentMiddleName = studentMiddleName;
    }

    public String getStudentMiddleName() {
        beforePropertyRead("studentMiddleName");
        return this.studentMiddleName;
    }

    public void setStudentLastName(String studentLastName) {
        beforePropertyWrite("studentLastName", this.studentLastName, studentLastName);
        this.studentLastName = studentLastName;
    }

    public String getStudentLastName() {
        beforePropertyRead("studentLastName");
        return this.studentLastName;
    }

    public void setStudentEmail(String studentEmail) {
        beforePropertyWrite("studentEmail", this.studentEmail, studentEmail);
        this.studentEmail = studentEmail;
    }

    public String getStudentEmail() {
        beforePropertyRead("studentEmail");
        return this.studentEmail;
    }

    public void setStudentEmailPublish(short studentEmailPublish) {
        beforePropertyWrite("studentEmailPublish", this.studentEmailPublish, studentEmailPublish);
        this.studentEmailPublish = studentEmailPublish;
    }

    public short getStudentEmailPublish() {
        beforePropertyRead("studentEmailPublish");
        if(this.studentEmailPublish == null) {
            return 0;
        }
        return this.studentEmailPublish;
    }

    public void setStudentBio(String studentBio) {
        beforePropertyWrite("studentBio", this.studentBio, studentBio);
        this.studentBio = studentBio;
    }

    public String getStudentBio() {
        beforePropertyRead("studentBio");
        return this.studentBio;
    }

    public void setSupervisorFirstName(String supervisorFirstName) {
        beforePropertyWrite("supervisorFirstName", this.supervisorFirstName, supervisorFirstName);
        this.supervisorFirstName = supervisorFirstName;
    }

    public String getSupervisorFirstName() {
        beforePropertyRead("supervisorFirstName");
        return this.supervisorFirstName;
    }

    public void setSupervisorMiddleName(String supervisorMiddleName) {
        beforePropertyWrite("supervisorMiddleName", this.supervisorMiddleName, supervisorMiddleName);
        this.supervisorMiddleName = supervisorMiddleName;
    }

    public String getSupervisorMiddleName() {
        beforePropertyRead("supervisorMiddleName");
        return this.supervisorMiddleName;
    }

    public void setSupervisorLastName(String supervisorLastName) {
        beforePropertyWrite("supervisorLastName", this.supervisorLastName, supervisorLastName);
        this.supervisorLastName = supervisorLastName;
    }

    public String getSupervisorLastName() {
        beforePropertyRead("supervisorLastName");
        return this.supervisorLastName;
    }

    public void setSupervisorEmail(String supervisorEmail) {
        beforePropertyWrite("supervisorEmail", this.supervisorEmail, supervisorEmail);
        this.supervisorEmail = supervisorEmail;
    }

    public String getSupervisorEmail() {
        beforePropertyRead("supervisorEmail");
        return this.supervisorEmail;
    }

    public void setDiscipline(String discipline) {
        beforePropertyWrite("discipline", this.discipline, discipline);
        this.discipline = discipline;
    }

    public String getDiscipline() {
        beforePropertyRead("discipline");
        return this.discipline;
    }

    public void setSubjectClass(String subjectClass) {
        beforePropertyWrite("subjectClass", this.subjectClass, subjectClass);
        this.subjectClass = subjectClass;
    }

    public String getSubjectClass() {
        beforePropertyRead("subjectClass");
        return this.subjectClass;
    }

    public void setSubject(String subject) {
        beforePropertyWrite("subject", this.subject, subject);
        this.subject = subject;
    }

    public String getSubject() {
        beforePropertyRead("subject");
        return this.subject;
    }

    public void setCoverageGeo(String coverageGeo) {
        beforePropertyWrite("coverageGeo", this.coverageGeo, coverageGeo);
        this.coverageGeo = coverageGeo;
    }

    public String getCoverageGeo() {
        beforePropertyRead("coverageGeo");
        return this.coverageGeo;
    }

    public void setCoverageChron(String coverageChron) {
        beforePropertyWrite("coverageChron", this.coverageChron, coverageChron);
        this.coverageChron = coverageChron;
    }

    public String getCoverageChron() {
        beforePropertyRead("coverageChron");
        return this.coverageChron;
    }

    public void setCoverageSample(String coverageSample) {
        beforePropertyWrite("coverageSample", this.coverageSample, coverageSample);
        this.coverageSample = coverageSample;
    }

    public String getCoverageSample() {
        beforePropertyRead("coverageSample");
        return this.coverageSample;
    }

    public void setMethod(String method) {
        beforePropertyWrite("method", this.method, method);
        this.method = method;
    }

    public String getMethod() {
        beforePropertyRead("method");
        return this.method;
    }

    public void setLanguage(String language) {
        beforePropertyWrite("language", this.language, language);
        this.language = language;
    }

    public String getLanguage() {
        beforePropertyRead("language");
        return this.language;
    }

    public void setDateSubmitted(LocalDateTime dateSubmitted) {
        beforePropertyWrite("dateSubmitted", this.dateSubmitted, dateSubmitted);
        this.dateSubmitted = dateSubmitted;
    }

    public LocalDateTime getDateSubmitted() {
        beforePropertyRead("dateSubmitted");
        return this.dateSubmitted;
    }

    public void setThesisId(Integer thesisId) {
        beforePropertyWrite("thesisId", this.thesisId, thesisId);
        this.thesisId = thesisId;
    }

    public Integer getThesisId() {
        beforePropertyRead("thesisId");
        return this.thesisId;
    }

    @Override
    public Object readPropertyDirectly(String propName) {
        if(propName == null) {
            throw new IllegalArgumentException();
        }

        switch(propName) {
            case "journalId":
                return this.journalId;
            case "status":
                return this.status;
            case "degree":
                return this.degree;
            case "degreeName":
                return this.degreeName;
            case "department":
                return this.department;
            case "university":
                return this.university;
            case "dateApproved":
                return this.dateApproved;
            case "title":
                return this.title;
            case "url":
                return this.url;
            case "abstract":
                return this._abstract;
            case "comment":
                return this.comment;
            case "studentFirstName":
                return this.studentFirstName;
            case "studentMiddleName":
                return this.studentMiddleName;
            case "studentLastName":
                return this.studentLastName;
            case "studentEmail":
                return this.studentEmail;
            case "studentEmailPublish":
                return this.studentEmailPublish;
            case "studentBio":
                return this.studentBio;
            case "supervisorFirstName":
                return this.supervisorFirstName;
            case "supervisorMiddleName":
                return this.supervisorMiddleName;
            case "supervisorLastName":
                return this.supervisorLastName;
            case "supervisorEmail":
                return this.supervisorEmail;
            case "discipline":
                return this.discipline;
            case "subjectClass":
                return this.subjectClass;
            case "subject":
                return this.subject;
            case "coverageGeo":
                return this.coverageGeo;
            case "coverageChron":
                return this.coverageChron;
            case "coverageSample":
                return this.coverageSample;
            case "method":
                return this.method;
            case "language":
                return this.language;
            case "dateSubmitted":
                return this.dateSubmitted;
            case "thesisId":
                return this.thesisId;
            default:
                return super.readPropertyDirectly(propName);
        }
    }

    @Override
    public void writePropertyDirectly(String propName, Object val) {
        if(propName == null) {
            throw new IllegalArgumentException();
        }

        switch (propName) {
            case "journalId":
                this.journalId = val == null ? 0 : (long)val;
                break;
            case "status":
                this.status = val == null ? 0 : (short)val;
                break;
            case "degree":
                this.degree = val == null ? 0 : (short)val;
                break;
            case "degreeName":
                this.degreeName = (String)val;
                break;
            case "department":
                this.department = (String)val;
                break;
            case "university":
                this.university = (String)val;
                break;
            case "dateApproved":
                this.dateApproved = (LocalDateTime)val;
                break;
            case "title":
                this.title = (String)val;
                break;
            case "url":
                this.url = (String)val;
                break;
            case "abstract":
                this._abstract = (String)val;
                break;
            case "comment":
                this.comment = (String)val;
                break;
            case "studentFirstName":
                this.studentFirstName = (String)val;
                break;
            case "studentMiddleName":
                this.studentMiddleName = (String)val;
                break;
            case "studentLastName":
                this.studentLastName = (String)val;
                break;
            case "studentEmail":
                this.studentEmail = (String)val;
                break;
            case "studentEmailPublish":
                this.studentEmailPublish = (Short)val;
                break;
            case "studentBio":
                this.studentBio = (String)val;
                break;
            case "supervisorFirstName":
                this.supervisorFirstName = (String)val;
                break;
            case "supervisorMiddleName":
                this.supervisorMiddleName = (String)val;
                break;
            case "supervisorLastName":
                this.supervisorLastName = (String)val;
                break;
            case "supervisorEmail":
                this.supervisorEmail = (String)val;
                break;
            case "discipline":
                this.discipline = (String)val;
                break;
            case "subjectClass":
                this.subjectClass = (String)val;
                break;
            case "subject":
                this.subject = (String)val;
                break;
            case "coverageGeo":
                this.coverageGeo = (String)val;
                break;
            case "coverageChron":
                this.coverageChron = (String)val;
                break;
            case "coverageSample":
                this.coverageSample = (String)val;
                break;
            case "method":
                this.method = (String)val;
                break;
            case "language":
                this.language = (String)val;
                break;
            case "dateSubmitted":
                this.dateSubmitted = (LocalDateTime)val;
                break;
            case "thesisId":
                this.thesisId = (Integer)val;
                break;
            default:
                super.writePropertyDirectly(propName, val);
        }
    }

    private void writeObject(ObjectOutputStream out) throws IOException {
        writeSerialized(out);
    }

    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
        readSerialized(in);
    }

    @Override
    protected void writeState(ObjectOutputStream out) throws IOException {
        super.writeState(out);
        out.writeLong(this.journalId);
        out.writeShort(this.status);
        out.writeShort(this.degree);
        out.writeObject(this.degreeName);
        out.writeObject(this.department);
        out.writeObject(this.university);
        out.writeObject(this.dateApproved);
        out.writeObject(this.title);
        out.writeObject(this.url);
        out.writeObject(this._abstract);
        out.writeObject(this.comment);
        out.writeObject(this.studentFirstName);
        out.writeObject(this.studentMiddleName);
        out.writeObject(this.studentLastName);
        out.writeObject(this.studentEmail);
        out.writeObject(this.studentEmailPublish);
        out.writeObject(this.studentBio);
        out.writeObject(this.supervisorFirstName);
        out.writeObject(this.supervisorMiddleName);
        out.writeObject(this.supervisorLastName);
        out.writeObject(this.supervisorEmail);
        out.writeObject(this.discipline);
        out.writeObject(this.subjectClass);
        out.writeObject(this.subject);
        out.writeObject(this.coverageGeo);
        out.writeObject(this.coverageChron);
        out.writeObject(this.coverageSample);
        out.writeObject(this.method);
        out.writeObject(this.language);
        out.writeObject(this.dateSubmitted);
        out.writeObject(this.thesisId);
    }

    @Override
    protected void readState(ObjectInputStream in) throws IOException, ClassNotFoundException {
        super.readState(in);
        this.journalId = in.readLong();
        this.status = in.readShort();
        this.degree = in.readShort();
        this.degreeName = (String)in.readObject();
        this.department = (String)in.readObject();
        this.university = (String)in.readObject();
        this.dateApproved = (LocalDateTime)in.readObject();
        this.title = (String)in.readObject();
        this.url = (String)in.readObject();
        this._abstract = (String)in.readObject();
        this.comment = (String)in.readObject();
        this.studentFirstName = (String)in.readObject();
        this.studentMiddleName = (String)in.readObject();
        this.studentLastName = (String)in.readObject();
        this.studentEmail = (String)in.readObject();
        this.studentEmailPublish = (Short)in.readObject();
        this.studentBio = (String)in.readObject();
        this.supervisorFirstName = (String)in.readObject();
        this.supervisorMiddleName = (String)in.readObject();
        this.supervisorLastName = (String)in.readObject();
        this.supervisorEmail = (String)in.readObject();
        this.discipline = (String)in.readObject();
        this.subjectClass = (String)in.readObject();
        this.subject = (String)in.readObject();
        this.coverageGeo = (String)in.readObject();
        this.coverageChron = (String)in.readObject();
        this.coverageSample = (String)in.readObject();
        this.method = (String)in.readObject();
        this.language = (String)in.readObject();
        this.dateSubmitted = (LocalDateTime)in.readObject();
        this.thesisId = (Integer)in.readObject();
    }

}
